#!/bin/bash

# ------------------------------------------------------------------------------------------------------------------------------
# Скрипт для обработки записей звонков
# 
# ФУНКЦИИ
# -------
# 1. Конвертирование записей звонков из WAV в MP3
# 2. Распределения записей звонков по папкам в соответствии с датой
# 3. Удаление старых записей звонков
#
# Есть несколько режимов работы скрипта:
#
# 1. Только конвертирование записей звонков из WAV в MP3, с удалением WAV файлов,
# БЕЗ перемещения по папкам в соответствии с датой
#
# 2. Только перемещение записей звонков по папкам в соответствии с датой, БЕЗ
# конвертирования файлов из WAV в MP3
#
# 3. Конвертирование записей звонков из WAV в MP3, с удалением WAV файлов,
# И перемещение файлов по папкам в соответствии с датой
# ВНИМАНИЕ! Если включена одновременно конвертация в MP3 и перемещение файлов записей звонков по папкам в соответствии с датой
# То необходимо установить значение DEPTH=1, иначе файлы не будут перемещены
#
# 4. Удаление старых записей звонков. Можно использовать в сочетании с тремя первыми режимами
#
# @see https://github.com/prog-it/Asterisk-CDR-Viewer-Mod
# ------------------------------------------------------------------------------------------------------------------------------

## Переменные для формирования путей к папкам с датами. НЕ изменять!
# Год (2017)
Y=`date +%Y`
# Месяц (04)
M=`date +%m -d "-1 day"`
# Вчерашнее число (27)
D=`date +%d -d "-1 day"`
# Вчерашняя дата (2017-04)
YM=`date +%Y-%m -d "-1 day"`
# Вчерашняя дата (2017-04-27)
YMD=`date +%Y-%m-%d -d "-1 day"`


## Папка, где находятся записи звонков. Например: "/var/calls/". СЛЕШ на конце!
DIR_SOURCE="/var/calls/"

## Конечная папка для файлов записей звонков, куда они будут перемещены. СЛЕШ на конце!
# Например: "/var/calls/$Y/$M/$D/"
# Например: "/var/calls/$Y/$YM/$YMD/"
DIR_DST="/var/calls/$Y/$YM/$YMD/"

## Перемещать файлы записей звонков по папкам в соответствии с датой. -> true, false
# Конечная папка берется из переменной DIR_DST
MOVE_BY_DATE=true

## Конвертировать файлы записей звонков в формат MP3. -> true, false
CONV_TO_MP3=true

## Изменить владельца и группу для файла после его конвертации на это значение
# Например: "user:group". Лучше всего установить имя и группу от которых запускается Asterisk
USER_GROUP="asterisk:asterisk"

## Уровень вложенности папок для поиска файлов записей звонков при конвертировании -> целое число
# Например: Если 1 - поиск файлов только в папке /var/calls/, 2 - поиск файлов в /var/calls/ и в /var/calls/[Любая_папка]/
# Можно указать, например: 9999. Это полезно, если настроено только конвертирование записей звонков, БЕЗ перемещения файлов.
# Тогда все файлы в /var/calls/ и во всех вложенных папках будут преобразованы в MP3
DEPTH=1

## Бетрейт MP3 файлов, при конвертировании из WAV в MP3. Указывается в Кбит/с -> целое число
BITRATE=32

## Не конвертировать файлы, размер которых, меньше заданного. Размер задается в КилоБайтах
# Файлы, размер которых меньше "REMOVE_MIN_SIZE" будут удалены перед конвертированием
# Если задано "0", то отключено
# Работает, если задано CONV_TO_MP3=true
REMOVE_MIN_SIZE=0

## Удалять старые записи звонков. -> true, false
# Файлы удаляются из папки, заданной в DIR_SOURCE, а также из всех вложенных папок
CLEAN_OLD=false

## Количество дней хранения записей звонков, после которых файлы записей будут удалены с диска
# Работает, если задано CLEAN_OLD=true
CLEAN_OLD_AFTER=365

## Удалять файлы, размер которых, меньше заданного. Размер задается в КилоБайтах
# Если задано "0", то отключено
# Работает, если задано CLEAN_OLD=true
CLEAN_OLD_MIN_SIZE=0

## Удалять "пустые папки" из папки, заданной в DIR_SOURCE, а также из всех вложенных папок
# Работает, если задано CLEAN_OLD=true
CLEAN_OLD_EMPTYDIR=true


if [ "$MOVE_BY_DATE" == true ]; then
	mkdir -p "$DIR_DST"
fi	

if [ "$CONV_TO_MP3" == true ]; then
	if [ "$REMOVE_MIN_SIZE" != "0" ]; then
		find "$DIR_SOURCE" -maxdepth $DEPTH -type f -name "*$YMD*.wav" -size -"$REMOVE_MIN_SIZE"k -exec rm -rf {} \;
	fi
	find "$DIR_SOURCE" -maxdepth $DEPTH -type f -name "*$YMD*.wav" -print0 | while IFS= read -r -d $'\0' line; do
		TMP_SOURCE="$line"
		TMP_CONV="${line%.wav}.mp3"
		nice -n 19 /usr/bin/lame -b $BITRATE --silent "$TMP_SOURCE" "$TMP_CONV";
		chown "$USER_GROUP" "$TMP_CONV"
		rm -f "$TMP_SOURCE"
		if [[ "$MOVE_BY_DATE" == true && "$DEPTH" == "1" ]]; then
			mv "$TMP_CONV" "$DIR_DST"
		fi
	done
fi	

if [[ "$MOVE_BY_DATE" == true && "$CONV_TO_MP3" == false ]]; then
	mv "$DIR_SOURCE"*$YMD* "$DIR_DST"
fi

if [ "$CLEAN_OLD" == true ]; then
	if [ "$CLEAN_OLD_MIN_SIZE" != "0" ]; then
		find "$DIR_SOURCE" -type f -size -"$CLEAN_OLD_MIN_SIZE"k -exec rm -rf {} \;
	fi
	find "${DIR_SOURCE}" -type f -mtime +"$CLEAN_OLD_AFTER" -exec rm -rf {} \;
	if [ "$CLEAN_OLD_EMPTYDIR" == true ]; then
		find "${DIR_SOURCE}" -type d -empty -exec rm -rf {} \;
	fi
fi

